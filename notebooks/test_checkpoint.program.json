{
  "module": "synalinks.src.programs.functional",
  "class_name": "Functional",
  "config": {
    "name": "chain_of_thought",
    "trainable": true,
    "modules": [
      {
        "module": "synalinks.modules",
        "class_name": "InputModule",
        "config": {
          "schema": {
            "description": "Input data model.",
            "properties": {
              "question": {
                "title": "Question",
                "type": "string"
              }
            },
            "required": [
              "question"
            ],
            "title": "SymbolicDataModel",
            "type": "object"
          },
          "optional": false,
          "name": "input_module"
        },
        "registered_name": null,
        "name": "input_module",
        "inbound_nodes": []
      },
      {
        "module": "synalinks.modules",
        "class_name": "Generator",
        "config": {
          "name": "generator",
          "description": "Use a `LanguageModel` to generate a data model from an arbitrary input data model.",
          "schema": {
            "properties": {
              "thinking": {
                "description": "Your step by step thinking process",
                "title": "Thinking",
                "type": "string"
              },
              "answer": {
                "description": "The numerical answer",
                "title": "Answer",
                "type": "number"
              }
            },
            "required": [
              "thinking",
              "answer"
            ],
            "title": "AnswerWithThinking",
            "type": "object"
          },
          "prompt_template": "\n<system>\nYou will be given an input, your task is to answer with a JSON object that follow this JSON schema:\n{{ outputs_schema }}\n{% if examples %}\nExamples:\n{% for example in examples %}\nInput:\n{{ example[0] }}\nOutput:\n{{ example[1] }}\n{% endfor %}\n{% endif %}\n{% if hints %}\nHints:\n{% for hint in hints %}\n - {{ hint }}\n{% endfor %}\n{% endif %}\n</system>\n<user>\nInput:\n{{ inputs }}\nOutput:\n</user>",
          "examples": [],
          "hints": [
            "Always answer in JSON format.",
            "Only infer the output JSON object's properties without additional information."
          ],
          "language_model": {
            "module": "synalinks",
            "class_name": "LanguageModel",
            "config": {
              "model": "ollama_chat/deepseek-r1",
              "api_base": "http://localhost:11434",
              "retry": 5
            },
            "registered_name": null
          }
        },
        "registered_name": null,
        "build_config": {
          "input_schema": {
            "description": "Input data model.",
            "properties": {
              "question": {
                "title": "Question",
                "type": "string"
              }
            },
            "required": [
              "question"
            ],
            "title": "SymbolicDataModel",
            "type": "object"
          }
        },
        "name": "generator",
        "inbound_nodes": [
          {
            "args": [
              {
                "class_name": "__symbolic_data_model__",
                "config": {
                  "schema": {
                    "description": "Input data model.",
                    "properties": {
                      "question": {
                        "title": "Question",
                        "type": "string"
                      }
                    },
                    "required": [
                      "question"
                    ],
                    "title": "SymbolicDataModel",
                    "type": "object"
                  },
                  "synalinks_history": [
                    "input_module",
                    0,
                    0
                  ]
                }
              }
            ],
            "kwargs": {
              "training": false
            }
          }
        ]
      }
    ],
    "input_modules": [
      [
        "input_module",
        0,
        0
      ]
    ],
    "output_modules": [
      [
        "generator",
        0,
        0
      ]
    ]
  },
  "registered_name": "Functional",
  "build_config": {
    "input_schema": null
  },
  "compile_config": {
    "optimizer": {
      "module": "synalinks.optimizers",
      "class_name": "RandomFewShot",
      "config": {
        "k": 3,
        "k_best": 10
      },
      "registered_name": null
    },
    "reward": {
      "module": "synalinks.rewards",
      "class_name": "ExactMatch",
      "config": {
        "name": "exact_match",
        "in_mask": [
          "answer"
        ],
        "out_mask": null
      },
      "registered_name": null
    },
    "reward_weights": null,
    "metrics": null,
    "run_eagerly": false,
    "steps_per_execution": 1
  },
  "variables": {
    "trainable_variables": {
      "generator": {
        "variable_6": {
          "prompt_template": "\n<system>\nYou will be given an input, your task is to answer with a JSON object that follow this JSON schema:\n{{ outputs_schema }}\n{% if examples %}\nExamples:\n{% for example in examples %}\nInput:\n{{ example[0] }}\nOutput:\n{{ example[1] }}\n{% endfor %}\n{% endif %}\n{% if hints %}\nHints:\n{% for hint in hints %}\n - {{ hint }}\n{% endfor %}\n{% endif %}\n</system>\n<user>\nInput:\n{{ inputs }}\nOutput:\n</user>",
          "examples": [],
          "hints": [
            "Always answer in JSON format.",
            "Only infer the output JSON object's properties without additional information."
          ],
          "predictions": []
        }
      }
    },
    "non_trainable_variables": {},
    "optimizer_variables": {
      "random_few_shot_6": {
        "iteration": {
          "iteration": 0
        }
      }
    },
    "metrics_variables": {
      "reward": {
        "total_with_count": {
          "total": 0.0,
          "count": 0
        }
      }
    }
  }
}